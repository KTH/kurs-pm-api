{
  "swagger": "2.0",
  "info": {
    "title": "Course memo/Kurs-PM API",
    "description": "Api to store information about uploaded course memos to be used in course development and course info projects",
    "version": "1.0.0"
  },
  "basePath": "/api/kurs-pm",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/_checkAPIkey": {
      "get": {
        "operationId": "checkAPIkey",
        "summary": "GET a test endpoint that is protected by api key to validate that consumer has a proper api key",
        "description": "",
        "parameters": [],
        "tags": [
          "system"
        ],
        "responses": {
          "200": {
            "description": "An empty response"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "api_key": [
              "read"
            ]
          }
        ]
      }
    },
    "/v1/courseMemoDocumentData/{id}": {
      "get": {
        "operationId": "getCourseMemoDocumentDataById",
        "summary": "Get course memo document descriptive data by document unique id ",
        "description": "Gets some form of data that only requires read access",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the round.semester.year.x to course memo data",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "v1"
        ],
        "responses": {
          "200": {
            "description": "The requested data",
            "schema": {
              "$ref": "#/definitions/ExistingData"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [{
          "api_key": [
            "read"
          ]
        }]
      },
      "post": {
        "operationId": "postCourseMemoDocumentDataById",
        "summary": "Saves an object of one course memo document descriptive data in the database per course and term",
        "description": "Saves a course memo document descriptive data in the database per course and term",
        "parameters": [
          {
            "name": "roundCourseMemoData",
            "in": "body",
            "description": "Course Memo Data for specific term and course round",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatedCourseMemoDocumentData"
            }
          }
        ],
        "tags": [
          "v1"
        ],
        "responses": {
          "200": {
            "description": "A successful save"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [{
          "api_key": [
            "write"
          ]
        }]
      },
      "put": {
        "operationId": "putCourseMemoDocumentDataById",
        "summary": "Update an existing object in the database",
        "description": "Update an existing object in the database",
        "parameters": [
          {
            "name": "roundCourseMemoData",
            "in": "body",
            "description": "Course Memo Data for specific term and course round",
            "schema": {
              "$ref": "#/definitions/UpdatedCourseMemoDocumentData"
            }
          }
        ],
        "tags": [
          "v1"
        ],
        "responses": {
          "200": {
            "description": "A successful update"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": {
          "api_key": [
            "write"
          ]
        }
      },
      "delete": {
        "operationId": "deleteCourseMemoDocumentDataById",
        "summary": "Delete a course memo",
        "description": "Delete all information for course memo with sent id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the round.semester.year.x to delete course memo data",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "v1"
        ],
        "responses": {
          "200": {
            "description": "The analysis was deleted",
            "schema": {
              "$ref": "#/definitions/UpdatedCourseMemoDocumentData"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": {
          "api_key": [
            "read"
          ]
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header",
      "scopes": {
        "read": "Read access to data",
        "write": "Write access to data"
      }
    }
  },
  "definitions": {
    "ExistingData": {
      "properties": {
        "_id": {
          "type": "string",
          "description": "Unique identifier representing some specific data"
        },
        "memoName": {
          "type": "string",
          "description": "Kurstillfällen ska visas med kortnamn i första handalternativt kurstillfällets termin och kurstillfälleskod om kortnamn saknas. Därefter ska kurstillfällets startdatum och undervisningsspråk visas inom parentes.Formatet för visning av kurstillfälle är således:[kurstillfälle.kortnamn] alt. [termin-kurstillfälleskod] (Startdatum [kurstillfälle.startdatum], [kurstillfälle.undervisningsspråk])"
        },
        "courseCode": {
          "type": "string",
          "description": "Course code for which it is valid"
        },
        "commentChange": {
          "type": "string",
          "description": "Comments about changes which were introduced after publishing, f.e., why have teacher uploaded a new version, what changed there"
        },
        "isPublished": {
          "type": "string",
          "description": "If document is published or in draft version"
        },
        "publishedDate": {
          "type": "string",
          "description": "When document were published (first)?? time"         
        },
        "pdfPMDate": {
          "type": "string",
          "description": "Time when pdf were stored in storage (f.e., Azure blobstorage)"
        },
        "changedDate": {
          "type": "string",
          "description": "When data were changed??"
        },
        "changedBy": {
          "type": "string",
          "description": "Unique KTH id of user who uploaded or changed this document data, f.e., u1iooii,"
        },
        "semester": {
          "type": "string",
          "description": "Course start term year (spring(VT)-1, autumn(HT)-2) , f.e. 20182 or 20181 (termin)"
        },
        "roundIdList": {
          "type": "string",
          "description": "List of round id:s for which memo is valid (kurstillfälle)"
        },
        "courseMemoFileName": {
          "type": "string",
          "description": "Uploaded courseMemo file"
        },
        "ugKeys": {
          "type": "array",
          "description": "UG Keys for access to edit course memos???"
        },
        "changedAfterPublishedDate": {
          "type": "array",
          "description": "Date for changes made after published???"
        }
      }
    },
    "UpdatedCourseMemoDocumentData": {
      "type": "object",
      "required": [
        "courseCode"
        ],
        "properties": {
            "memoName": {
              "type": "string",
              "description": "Kurstillfällen ska visas med kortnamn i första handalternativt kurstillfällets termin och kurstillfälleskod om kortnamn saknas. Därefter ska kurstillfällets startdatum och undervisningsspråk visas inom parentes.Formatet för visning av kurstillfälle är således:[kurstillfälle.kortnamn] alt. [termin-kurstillfälleskod] (Startdatum [kurstillfälle.startdatum], [kurstillfälle.undervisningsspråk])"
            },
            "courseCode": {
              "type": "string",
              "description": "Course code for which it is valid"
            },
            "commentChange": {
              "type": "string",
              "description": "Comments about changes which were introduced after publishing, f.e., why have teacher uploaded a new version, what changed there"
            },
            "isPublished": {
              "type": "string",
              "description": "If document is published or in draft version"
            },
            "publishedDate": {
              "type": "string",
              "description": "When document were published (first)?? time"         
            },
            "pdfPMDate": {
              "type": "string",
              "description": "Time when pdf were stored in storage (f.e., Azure blobstorage)"
            },
            "changedDate": {
              "type": "string",
              "description": "When data were changed??"
            },
            "changedBy": {
              "type": "string",
              "description": "Unique KTH id of user who uploaded or changed this document data, f.e., u1iooii,"
            }, 
            "semester": {
              "type": "string",
              "description": "Course start term year (spring(VT)-1, autumn(HT)-2) , f.e. 20182 or 20181 (termin)"
            },
            "roundIdList": {
              "type": "string",
              "description": "List of round id:s for which memo is valid (kurstillfälle)"
            },
            "courseMemoFileName": {
              "type": "string",
              "description": "Uploaded courseMemo file"
            },    
          "ugKeys": {
            "type": "array",
            "description": "UG Keys for access to edit course memos???"
          },
          "changedAfterPublishedDate": {
            "type": "array",
            "description": "Date for changes made after published???"
          }
      }
    },
    "Error": {
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "fields": {
          "type": "string"
        }
      }
    },
    "UserList": {
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "fields": {
          "type": "string"
        }
      }
    }
  }
}